# version: '3.8'

services:
  # Autism React Application
  autism:
    build:
      context: ./autism/frontend
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    env_file:
      - ./autism/frontend/.env
    volumes:
      - ./autism/frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_HOST=0.0.0.0
      - VITE_PORT=8001
    networks:
      - autism-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  
  backend:
    build:
      context: ./autism/backend/backend
      dockerfile: Dockerfile
    container_name: autism-backend
    ports:
      - "8003:8003"
    env_file:
      - ./autism/backend/backend/.env
    environment:
      - DATABASE_URL=/app/autism_db.db
      - CORS_ORIGINS=http://localhost:8001
      - AUTISM_AI_SERVER=http://autism-ai-server:8002/get_activity_info
      - OPENAI_API_KEY=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
    volumes:
      - ./autism/backend/autism_db.db:/app/autism_db.db
      - ./autism/backend/backend/generated_reports:/app/generated_reports
      - ./autism/backend/backend/report_generator:/app/report_generator
    depends_on:
      - ai-server
    networks:
      - autism-network
    restart: unless-stopped

  # AI Server for Gaze Tracking
  ai-server:
    build:
      context: ./autism/backend/AI_Server
      dockerfile: Dockerfile
    container_name: autism-ai-server
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=/app/autism_db.db
      - UPLOAD_DIR=/app/uploads
      - CORS_ORIGINS=http://localhost:8001
    volumes:
      - ./autism/backend/autism_db.db:/app/autism_db.db
      - ./autism/backend/AI_Server/uploads:/app/uploads
      - ./autism/backend/backend/yolov5s.pt:/app/yolov5s.pt
    networks:
      - autism-network
    restart: unless-stopped

  # People Analytics React Application
  people-analytics:
    build:
      context: ./peopleAnalytics
      dockerfile: Dockerfile
    ports:
      - "8006:8006"
    volumes:
      - ./peopleAnalytics:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_HOST=0.0.0.0
      - VITE_PORT=8006
    networks:
      - elm-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8006/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  # Elmhub React Application
  # elmhub:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8007:8007"
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   environment:
  #     - NODE_ENV=development
  #     - VITE_HOST=0.0.0.0
  #     - VITE_PORT=8007
  #   networks:
  #     - elm-network
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8007/"]
  #     interval: 30s
  #     timeout: 3s
  #     retries: 3
  #     start_period: 5s

  # Sage React Application
  sage:
    build:
      context: ./sage
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    env_file:
      - ./sage/.env
    volumes:
      - ./sage:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_HOST=0.0.0.0
      - VITE_PORT=8004
    networks:
      - elm-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "8000:80"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - elm-network
      - autism-network      
    depends_on:
      - autism
      - people-analytics
      - sage
      # - elmhub

networks:
  elm-network:
    driver: bridge
  
  autism-network:
    driver: bridge

volumes:
  uploads:
  generated_reports: 
