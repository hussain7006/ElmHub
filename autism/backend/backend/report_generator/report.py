import os
import uuid
from jinja2 import Environment, FileSystemLoader
from playwright.sync_api import sync_playwright
import base64



def get_base64_logo(path="assets/logo1.svg"):
    with open(path, "rb") as f:
        return f"data:image/svg+xml;base64,{base64.b64encode(f.read()).decode('utf-8')}"


def render_page(env, template_name, context):
    template = env.get_template(template_name)
    return template.render(context)


def generate_pdf_from_named_data(data: dict, output_dir="output") -> str:
    os.makedirs(output_dir, exist_ok=True)
    env = Environment(loader=FileSystemLoader("templates"))

    # Ordered mapping from data key โ template name
    page_map = {
        "cover": "cover.html",
        "session": "session.html",
        "observations": "observations.html",
        "recommendations": "recommendations.html"
    }

    pages_html = []
    
    logo_base64 = get_base64_logo()
    for key, template_name in page_map.items():
        page_data = data.get(key, {})
        page_data["logo_base64"] = logo_base64  # ๐ Inject base64 logo
        html = render_page(env, template_name, {key: page_data})
        pages_html.append(html)

    filename = f"report_{uuid.uuid4().hex[:8]}.pdf"
    filepath = os.path.join(output_dir, filename)

    with sync_playwright() as p:
        print("launching browser")
        browser = p.chromium.launch()
        print("browser launched")
        page = browser.new_page()
        print("got into new page")
        all_html = "".join([f"<div style='page-break-after: always'>{html}</div>" for html in pages_html])
        page.set_content(f"<html><body>{all_html}</body></html>")
        print("converting to pdf")
        page.pdf(
            path=filepath,
            format="A4",
            print_background=True,
            margin={"top": "0px", "bottom": "0px", "left": "0px", "right": "0px"}
        )
        print("pdf generated")
        browser.close()

    return filepath


input_data = {
    "cover": {
        "top_label": "ููุตุฉ ูุฑูุฒ ุงูุชููุฒ ููุชูุญุฏ",
        "heading": "ุชูุฑูุฑ ุฌูุณุฉ ุชูููู ุงูุฐูุงุก ุงูุงุตุทูุงุนู",
        "platform_label": "ุงูููุตุฉ: ูุฑูุฒ ุงูุชููุฒ ููุชูุญุฏ - Elm",
        "intro": (
            "ูุณุชุนุฑุถ ูุฐุง ุงูุชูุฑูุฑ ูุฑุงุฌุนุฉ ุฏูููุฉ ูุฌูุณุฉ ุงูุชูููู ุจูุงุกู ุนูู ุงูุจูุงูุงุช ุงูุชู ุชู ุฌูุนูุง ุจุงุณุชุฎุฏุงู "
            "ุชูููุงุช ุงูุฐูุงุก ุงูุงุตุทูุงุนู. ูุชุถูู ุงูุชุญููู ุชุชุจุน ุงูุชูุงุนูุงุชุ ูููุงุณ ูุนุฏู ุงูุชุฑููุฒ ูุงูุงุณุชุฌุงุจุฉุ ูุฑุตุฏ "
            "ุงูุญุฑูุงุช ูุงูุณููููุงุช ุงูุทุจูุนูุฉุ ููุง ูุณุงูู ูู ููู ููุท ุงุณุชุฌุงุจุฉ ุงูุทูู. ููุง ูููุฑ ุงูุชูุฑูุฑ ุชูุตูุงุช "
            "ุชูุฏู ุฅูู ุชุญุณูู ุชุฌุฑุจุฉ ุงูุทูู ูุชุทููุฑ ุงุณุชุฑุงุชูุฌูุงุช ุงูุฏุนู ุงูููุงุณุจุฉ ุจูุฏู ุชุญููู ุจูุฆุฉ ุชุนููููุฉ "
            "ูุฅุฏุฑุงููุฉ ุฃูุซุฑ ูุนุงููุฉ."
        )
        
    },
    "session": {
    "title": "ููุฎุต ุงูุฌูุณุฉ",
    "child_info": {
        "child_name": "ุฎุงูุฏ ุนุจุฏุงูุนุฒูุฒ ูุญูุฏ",
        "age": "7 ุณููุงุช",
        "gender": "ุฐูุฑ",
        "severity": "ุชูุญุฏ ูุชูุณุทุฉ",
        "speech": "ุชูุญุฏ ูุชูุณุท",
        "date": "21/02/2025",
        "time": "10:10 A.M.",
        "duration": "30 ุฏูููุฉ"
    },
    "behavior_observed": "ูุธูุฑ ุณููููุงุช ุงูุจูุงุก ูุงูุงุณุชููุงุก ุนูู ุงูุฃุฑุถ ุนูุฏ ุฑูุถ ุทูุจ ุฃู ุฅุฌุจุงุฑู ุนูู ุงููุดู",
    "session_summary_heading": "ููุฎุต ุงูุฌูุณุฉ",
    "session_summary_text": (
        """ุชูุช ูุฑุงูุจุฉ ุณููููุงุช ุงูุทูู ุฎูุงู ุงูุฌูุณุฉ ุจุงุณุชุฎุฏุงู ุงูุฐูุงุก ุงูุงุตุทูุงุนู ูุชุญููู ุงูุญุฑูุงุช ุงููุฑุตูุฏุฉ 
ูุชูุงุนู ุงูุทูู ูุน ุงูุฃูุดุทุฉ ุงููุฎุชููุฉ. ุฃุธูุฑุช ุงูุฌูุณุฉ ุจุนุถ ุงูุชุญุฏูุงุช ูู ุฅุฏุงุฑุฉ ุงููุดุงุนุฑุ ุญูุซ ุชู 
ุชุณุฌูู ุชุนุจูุฑุงุช ุณูุจูุฉ ูุซู ุงูุตุฑุงุฎ ูุงูุจูุงุกุ ูุน ุชูุฑุงุฑ ุญุฑูุงุช ุงููุฑูุจ ูุงูุถุฑุจุ ููุง ูุดูุฑ ุฅูู ุญุงุฌุฉ 
ูุฏุนู ุฅุถุงูู ูู ุฅุฏุงุฑุฉ ุงูุงููุนุงูุงุช. ุชูุช ููุงุญุธุฉ ุณููููุงุช ุงูุทูู ุฎูุงู ุงูุฌูุณุฉ ุจุงุณุชุฎุฏุงู ุงูุฐูุงุก 
ุงูุงุตุทูุงุนู ูุชุญููู ุงูุญุฑูุงุช ุงููุฑุตูุฏุฉ ูุชูุงุนู ุงูุทูู ูุน ุงูุฃูุดุทุฉ ุงููุฎุชููุฉ. ุฃุธูุฑุช ุงูุฌูุณุฉ ุจุนุถ 
ุงูุชุญุฏูุงุช ูู ุฅุฏุงุฑุฉ ุงููุดุงุนุฑุ ุญูุซ ุชู ุชุณุฌูู ุชุนุจูุฑุงุช ุณูุจูุฉ ูุซู ุงูุตุฑุงุฎ ูุงูุจูุงุกุ ูุน ุชูุฑุงุฑ ุญุฑูุงุช 
ุงููุฑูุจ ูุงูุถุฑุจุ ููุง ูุดูุฑ ุฅูู ุญุงุฌุฉ ูุฏุนู ุฅุถุงูู ูู ุฅุฏุงุฑุฉ ุงูุงููุนุงูุงุช. ูุฏุนู ุฅุถุงูู ูู ุฅุฏุงุฑุฉ ุงูุงููุนุงูุงุช.

ุชูุช ูุฑุงูุจุฉ ุณููููุงุช ุงูุทูู ุฎูุงู ุงูุฌูุณุฉ ุจุงุณุชุฎุฏุงู ุงูุฐูุงุก ุงูุงุตุทูุงุนู ูุชุญููู ุงูุญุฑูุงุช ุงููุฑุตูุฏุฉ 
ูุชูุงุนู ุงูุทูู ูุน ุงูุฃูุดุทุฉ ุงููุฎุชููุฉ. ุฃุธูุฑุช ุงูุฌูุณุฉ ุจุนุถ ุงูุชุญุฏูุงุช ูู ุฅุฏุงุฑุฉ ุงููุดุงุนุฑุ ุญูุซ ุชู 
ุชุณุฌูู ุชุนุจูุฑุงุช ุณูุจูุฉ ูุซู ุงูุตุฑุงุฎ ูุงูุจูุงุกุ ูุน ุชูุฑุงุฑ ุญุฑูุงุช ุงููุฑูุจ ูุงูุถุฑุจุ ุชุณุฌูู ุชุนุจูุฑุงุช ุณูุจูุฉ 
ูุซู ุงูุตุฑุงุฎ ูุงูุจูุงุกุ ูุน ุชูุฑุงุฑ ุญุฑูุงุช ุงููุฑูุจ ูุงูุถุฑุจ.
"""
    ),
    "analysis_heading": "ุงููุชุงุฆุฌ ุงูุชุญููููุฉ",
    "analysis_items": [
        "ุนุฏุฏ ุงูุฃูุดุทุฉ ุงูููุชููุฉ: 12 ูู ุฃุตู 20",
        "ุฒูู ุงูุชูุฑุงุฑ ุงูุณูููู: 240.34 ุซุงููุฉ",
        "ุฒูู ุงูุชุฑููุฒ ูุงูุงูุชุจุงู: 3 ุฏูุงุฆู",
        "ุฃูุซุฑ ุญุฑูุฉ ูุชูุฑุฑุฉ: ุชุญุฑูู ุงููุฏูู"
    ]
},
    "observations": {
        "heading": "ุชุญููู ุงูุณููููุงุช ูุงูููุงุญุธุงุช"
    },
    "recommendations": {
        "heading": "ุงูุชูุตูุงุช ูุงูููุงุญุธุงุช ุงูููุงุฆูุฉ"
    }
}

pdf_path = generate_pdf_from_named_data(input_data)
print("PDF saved to:", pdf_path)